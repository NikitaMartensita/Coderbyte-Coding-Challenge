// Question: Have the function AdditivePersistence(num) take the num parameter being passed which will always
// be a positive integer and return its additive persistence which is the number of times you must add the 
// digits in num until you reach a single digit. For example: if num is 2718 then your program should return 2
// because 2 + 7 + 1 + 8 = 18 and 1 + 8 = 9 and you stop at 9. 

function bitsSum(number) {
  var numStr =String(number);
  var res = 0;
  for(var i=0; i<numStr.length; i++){
    res += Number(numStr[i]);
  }
  return res;
}

function AdditivePersistence(num) { 
  var count = 0;
  while(num>=10){
     count++;
     num = bitsSum(num);
  }

// code goes here  
return count; 
}
   
// keep this function call here 
// to see how to enter arguments in JavaScript scroll down
AdditivePersistence(readline());           
